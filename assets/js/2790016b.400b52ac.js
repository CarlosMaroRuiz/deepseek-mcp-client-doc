"use strict";(self.webpackChunkdeepseek_mcp_client_docs=self.webpackChunkdeepseek_mcp_client_docs||[]).push([[588],{4727:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"configuration/mixed-configuration","title":"Configuraci\xf3n Mixta","description":"DeepSeek MCP Client puede usar m\xfaltiples tipos de servidores MCP simult\xe1neamente: HTTP, STDIO y en memoria (FastMCP).","source":"@site/docs/configuration/mixed-configuration.md","sourceDirName":"configuration","slug":"/configuration/mixed-configuration","permalink":"/deepseek-mcp-client/docs/configuration/mixed-configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/CarlosMaroRuiz/deepseek-mcp-client/tree/main/docs/docs/configuration/mixed-configuration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configuraci\xf3n de Servidores STDIO","permalink":"/deepseek-mcp-client/docs/configuration/stdio-servers"},"next":{"title":"Habilitar logging","permalink":"/deepseek-mcp-client/docs/logging/enable-logging"}}');var i=t(4848),r=t(8453);const s={},o="Configuraci\xf3n Mixta",c={},l=[{value:"Configuraci\xf3n B\xe1sica Mixta",id:"configuraci\xf3n-b\xe1sica-mixta",level:2},{value:"HTTP + STDIO",id:"http--stdio",level:3},{value:"Con FastMCP (En Memoria)",id:"con-fastmcp-en-memoria",level:2},{value:"Ejemplo del README",id:"ejemplo-del-readme",level:3},{value:"Configuraci\xf3n Avanzada Mixta",id:"configuraci\xf3n-avanzada-mixta",level:2},{value:"Con MCPServerConfig",id:"con-mcpserverconfig",level:3},{value:"Detecci\xf3n Autom\xe1tica de Tipos",id:"detecci\xf3n-autom\xe1tica-de-tipos",level:2},{value:"Verificar Configuraci\xf3n Mixta",id:"verificar-configuraci\xf3n-mixta",level:2},{value:"Ver Tipos de Transporte",id:"ver-tipos-de-transporte",level:3},{value:"Ejemplo Pr\xe1ctico",id:"ejemplo-pr\xe1ctico",level:2},{value:"Sistema Completo",id:"sistema-completo",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"configuraci\xf3n-mixta",children:"Configuraci\xf3n Mixta"})}),"\n",(0,i.jsx)(n.p,{children:"DeepSeek MCP Client puede usar m\xfaltiples tipos de servidores MCP simult\xe1neamente: HTTP, STDIO y en memoria (FastMCP)."}),"\n",(0,i.jsx)(n.h2,{id:"configuraci\xf3n-b\xe1sica-mixta",children:"Configuraci\xf3n B\xe1sica Mixta"}),"\n",(0,i.jsx)(n.h3,{id:"http--stdio",children:"HTTP + STDIO"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nimport asyncio\n\nasync def main():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=[\n            # Servidor HTTP\n            'http://localhost:8000/mcp/',\n            \n            # Servidor STDIO\n            {\n                'command': 'python',\n                'args': ['local_server.py']\n            }\n        ]\n    )\n    \n    result = await client.execute('\xbfQu\xe9 herramientas tienes disponibles?')\n    print(f\"Herramientas: {result.tools_used}\")\n    \n    await client.close()\n\nasyncio.run(main())\n"})}),"\n",(0,i.jsx)(n.h2,{id:"con-fastmcp-en-memoria",children:"Con FastMCP (En Memoria)"}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-del-readme",children:"Ejemplo del README"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nfrom fastmcp import FastMCP\nimport asyncio\n\n# Servidor en memoria\ncalculator = FastMCP(\"Calculator\")\n\n@calculator.tool\ndef add(a: float, b: float) -> float:\n    \"\"\"Add two numbers\"\"\"\n    return a + b\n\nasync def main():\n    # Tipos de transporte mixtos\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=[\n            'http://localhost:8000/mcp/',           # HTTP\n            {                                       # STDIO\n                'command': 'python',\n                'args': ['local_server.py']\n            },\n            calculator                              # En memoria\n        ]\n    )\n    \n    result = await client.execute('Suma 5 + 3 y tambi\xe9n consulta la base de datos')\n    print(result.output)\n    \n    await client.close()\n\nasyncio.run(main())\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuraci\xf3n-avanzada-mixta",children:"Configuraci\xf3n Avanzada Mixta"}),"\n",(0,i.jsx)(n.h3,{id:"con-mcpserverconfig",children:"Con MCPServerConfig"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient, MCPServerConfig\nfrom fastmcp import FastMCP\n\n# Herramientas r\xe1pidas en memoria\nquick_tools = FastMCP(\"Quick Tools\")\n\n@quick_tools.tool\ndef format_text(text: str, format_type: str = \"upper\") -> str:\n    \"\"\"Format text quickly\"\"\"\n    if format_type == \"upper\":\n        return text.upper()\n    elif format_type == \"lower\":\n        return text.lower()\n    return text\n\n# Configuraci\xf3n h\xedbrida\nclient = DeepSeekClient(\n    model='deepseek-chat',\n    system_prompt='''\n    Tienes acceso a:\n    - Base de datos SQL (HTTP)\n    - An\xe1lisis de archivos (STDIO)  \n    - Herramientas r\xe1pidas (memoria)\n    \n    Usa la m\xe1s apropiada para cada tarea.\n    ''',\n    mcp_servers=[\n        # HTTP: Base de datos\n        {\n            'url': 'http://localhost:8000/mcp/',\n            'headers': {'X-Service': 'database'},\n            'timeout': 30.0\n        },\n        \n        # STDIO: An\xe1lisis de archivos\n        {\n            'command': 'python',\n            'args': ['file_analyzer.py'],\n            'timeout': 120.0\n        },\n        \n        # En memoria: Utilidades r\xe1pidas\n        quick_tools,\n        \n        # MCPServerConfig avanzado\n        MCPServerConfig(\n            name=\"Servidor Especializado\",\n            command='node',\n            args=['special_server.js'],\n            env={'NODE_ENV': 'production'},\n            timeout=60.0\n        )\n    ]\n)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"detecci\xf3n-autom\xe1tica-de-tipos",children:"Detecci\xf3n Autom\xe1tica de Tipos"}),"\n",(0,i.jsx)(n.p,{children:"La librer\xeda detecta autom\xe1ticamente el tipo de cada servidor:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"client = DeepSeekClient(\n    model='deepseek-chat',\n    mcp_servers=[\n        'http://localhost:8000/mcp/',  # HTTP (por URL)\n        'server.py',                   # STDIO (por extensi\xf3n .py)\n        'server.js',                   # STDIO (por extensi\xf3n .js)\n        calculator,                    # En memoria (FastMCP instance)\n        {\n            'url': 'http://localhost:8001/mcp/',\n            'timeout': 45.0\n        },                             # HTTP (por 'url' key)\n        {\n            'command': 'python',\n            'args': ['analyzer.py']\n        }                              # STDIO (por 'command' key)\n    ]\n)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"verificar-configuraci\xf3n-mixta",children:"Verificar Configuraci\xf3n Mixta"}),"\n",(0,i.jsx)(n.h3,{id:"ver-tipos-de-transporte",children:"Ver Tipos de Transporte"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"async def main():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=[\n            'http://localhost:8000/mcp/',\n            'server.py',\n            calculator\n        ]\n    )\n    \n    # Ejecutar consulta para obtener metadata\n    result = await client.execute('Lista las herramientas')\n    \n    if result.success:\n        # Ver tipos de transporte usados\n        transport_types = result.metadata.get('transport_types', [])\n        print(f\"Tipos de transporte: {transport_types}\")\n        \n        # Ver estad\xedsticas\n        stats = client.get_stats()\n        print(f\"Servidores conectados: {stats['servers_connected']}\")\n        print(f\"Herramientas disponibles: {stats['tools_available']}\")\n    \n    await client.close()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ejemplo-pr\xe1ctico",children:"Ejemplo Pr\xe1ctico"}),"\n",(0,i.jsx)(n.h3,{id:"sistema-completo",children:"Sistema Completo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nfrom fastmcp import FastMCP\nimport asyncio\n\n# Crear herramientas en memoria para operaciones r\xe1pidas\nutils = FastMCP(\"Utils\")\n\n@utils.tool\ndef calculate(expression: str) -> float:\n    \"\"\"Calculate simple math expressions\"\"\"\n    try:\n        return eval(expression)  # Solo para ejemplo\n    except:\n        return 0.0\n\n@utils.tool\ndef count_words(text: str) -> int:\n    \"\"\"Count words in text\"\"\"\n    return len(text.split())\n\nasync def main():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        system_prompt='Eres un asistente con herramientas variadas.',\n        mcp_servers=[\n            # Base de datos remota\n            {\n                'url': 'http://localhost:8000/mcp/',\n                'headers': {'X-Service': 'database'},\n                'timeout': 60.0\n            },\n            \n            # Procesamiento local de archivos\n            {\n                'command': 'python',\n                'args': ['file_processor.py'],\n                'env': {'PROCESSOR_MODE': 'batch'},\n                'timeout': 180.0\n            },\n            \n            # Utilidades r\xe1pidas\n            utils\n        ],\n        enable_logging=True\n    )\n    \n    try:\n        result = await client.execute('''\n        Necesito:\n        1. Consultar datos de usuarios en la base de datos\n        2. Procesar un archivo CSV grande\n        3. Calcular 25 * 3.5\n        4. Contar palabras en este texto\n        ''')\n        \n        if result.success:\n            print(f\"\u2705 Respuesta: {result.output}\")\n            print(f\"\ud83d\udd27 Herramientas usadas: {result.tools_used}\")\n            print(f\"\ud83d\ude80 Transportes: {result.metadata.get('transport_types', [])}\")\n        \n    finally:\n        await client.close()\n\nasyncio.run(main())\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Ventajas de la Configuraci\xf3n Mixta",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HTTP"}),": Para servicios remotos y APIs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"STDIO"}),": Para procesamiento local intensivo"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FastMCP"}),": Para operaciones r\xe1pidas y utilidades"]}),"\n"]})}),"\n",(0,i.jsx)(n.admonition,{title:"Rendimiento",type:"warning",children:(0,i.jsx)(n.p,{children:"FastMCP (memoria) es m\xe1s r\xe1pido para operaciones simples. USA HTTP/STDIO para tareas que requieren recursos externos o procesamiento pesado."})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(6540);const i={},r=a.createContext(i);function s(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);