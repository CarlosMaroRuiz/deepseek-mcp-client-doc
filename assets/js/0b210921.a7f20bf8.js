"use strict";(self.webpackChunkdeepseek_mcp_client_docs=self.webpackChunkdeepseek_mcp_client_docs||[]).push([[2036],{1737:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"configuration/http-servers","title":"Configuraci\xf3n de Servidores HTTP","description":"Los servidores HTTP MCP permiten conectar herramientas externas con DeepSeek MCP Client. Esta gu\xeda cubre las opciones de configuraci\xf3n soportadas por la librer\xeda.","source":"@site/docs/configuration/http-servers.md","sourceDirName":"configuration","slug":"/configuration/http-servers","permalink":"/deepseek-mcp-client/docs/configuration/http-servers","draft":false,"unlisted":false,"editUrl":"https://github.com/CarlosMaroRuiz/deepseek-mcp-client/tree/main/docs/docs/configuration/http-servers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Gu\xeda R\xe1pida","permalink":"/deepseek-mcp-client/docs/quickstart"},"next":{"title":"Configuraci\xf3n de Servidores STDIO","permalink":"/deepseek-mcp-client/docs/configuration/stdio-servers"}}');var s=i(4848),o=i(8453);const t={},a="Configuraci\xf3n de Servidores HTTP",c={},l=[{value:"URL Simple",id:"url-simple",level:2},{value:"Configuraci\xf3n con Diccionario",id:"configuraci\xf3n-con-diccionario",level:2},{value:"Opciones Disponibles en Diccionario",id:"opciones-disponibles-en-diccionario",level:3},{value:"Configuraci\xf3n de Timeout",id:"configuraci\xf3n-de-timeout",level:2},{value:"Timeout Personalizado",id:"timeout-personalizado",level:3},{value:"Diferentes Valores de Timeout",id:"diferentes-valores-de-timeout",level:3},{value:"Configuraci\xf3n con Headers",id:"configuraci\xf3n-con-headers",level:2},{value:"Headers de Autenticaci\xf3n",id:"headers-de-autenticaci\xf3n",level:3},{value:"Configuraci\xf3n Avanzada con MCPServerConfig",id:"configuraci\xf3n-avanzada-con-mcpserverconfig",level:2},{value:"Usando la Clase MCPServerConfig",id:"usando-la-clase-mcpserverconfig",level:3},{value:"M\xfaltiples Servidores con MCPServerConfig",id:"m\xfaltiples-servidores-con-mcpserverconfig",level:3},{value:"M\xfaltiples Servidores HTTP",id:"m\xfaltiples-servidores-http",level:2},{value:"Ejemplo con M\xfaltiples URLs",id:"ejemplo-con-m\xfaltiples-urls",level:3},{value:"Ejemplos Pr\xe1cticos",id:"ejemplos-pr\xe1cticos",level:2},{value:"Ejemplo B\xe1sico",id:"ejemplo-b\xe1sico",level:3},{value:"Ejemplo con Headers y Timeout",id:"ejemplo-con-headers-y-timeout",level:3},{value:"Verificar Configuraci\xf3n",id:"verificar-configuraci\xf3n",level:2},{value:"Obtener Informaci\xf3n del Cliente",id:"obtener-informaci\xf3n-del-cliente",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configuraci\xf3n-de-servidores-http",children:"Configuraci\xf3n de Servidores HTTP"})}),"\n",(0,s.jsx)(n.p,{children:"Los servidores HTTP MCP permiten conectar herramientas externas con DeepSeek MCP Client. Esta gu\xeda cubre las opciones de configuraci\xf3n soportadas por la librer\xeda."}),"\n",(0,s.jsx)(n.h2,{id:"url-simple",children:"URL Simple"}),"\n",(0,s.jsx)(n.p,{children:"La forma m\xe1s sencilla es usar una URL directa:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nimport asyncio\n\nasync def main():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=['http://localhost:8000/mcp/']\n    )\n    \n    result = await client.execute('\xbfQu\xe9 herramientas tienes disponibles?')\n    print(result.output)\n    \n    await client.close()\n\nasyncio.run(main())\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuraci\xf3n-con-diccionario",children:"Configuraci\xf3n con Diccionario"}),"\n",(0,s.jsx)(n.p,{children:"Para m\xe1s control, usa un diccionario de configuraci\xf3n:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"client = DeepSeekClient(\n    model='deepseek-chat',\n    mcp_servers=[{\n        'url': 'http://localhost:8000/mcp/',\n        'timeout': 30.0\n    }]\n)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"opciones-disponibles-en-diccionario",children:"Opciones Disponibles en Diccionario"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"server_config = {\n    'url': 'http://localhost:8000/mcp/',     # URL del servidor (requerida)\n    'headers': {},                           # Headers HTTP personalizados\n    'timeout': 30.0                          # Timeout en segundos (None = sin l\xedmite)\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuraci\xf3n-de-timeout",children:"Configuraci\xf3n de Timeout"}),"\n",(0,s.jsx)(n.h3,{id:"timeout-personalizado",children:"Timeout Personalizado"}),"\n",(0,s.jsxs)(n.p,{children:["Basado en el ejemplo ",(0,s.jsx)(n.code,{children:"client_mcp_http.py"})," del proyecto:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nimport asyncio\n\nasync def main():\n    # Sin timeout para operaciones largas\n    agent = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=[{\n            'url': 'http://localhost:8000/mcp/',\n            'timeout': None  # Sin l\xedmite de tiempo\n        }]\n    )\n    \n    try:\n        result = await agent.execute('What tools do you have available in the MCP_SQL server?')\n        \n        if result.success:\n            print(f\"\u2705 Respuesta: {result.output}\")\n            print(f\"\u23f1\ufe0f Duraci\xf3n: {result.metadata.get('duration', 0):.2f}s\")\n        else:\n            print(f\"\u274c Error: {result.error}\")\n            \n    finally:\n        await agent.close()\n\nasyncio.run(main())\n"})}),"\n",(0,s.jsx)(n.h3,{id:"diferentes-valores-de-timeout",children:"Diferentes Valores de Timeout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# M\xfaltiples servidores con diferentes timeouts\nclient = DeepSeekClient(\n    model='deepseek-chat',\n    mcp_servers=[\n        {\n            'url': 'http://localhost:8000/mcp/',\n            'timeout': 10.0  # 10 segundos\n        },\n        {\n            'url': 'http://localhost:8001/mcp/',\n            'timeout': 120.0  # 2 minutos\n        },\n        {\n            'url': 'http://localhost:8002/mcp/',\n            'timeout': None  # Sin l\xedmite\n        }\n    ]\n)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuraci\xf3n-con-headers",children:"Configuraci\xf3n con Headers"}),"\n",(0,s.jsx)(n.h3,{id:"headers-de-autenticaci\xf3n",children:"Headers de Autenticaci\xf3n"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Token Bearer\nbearer_server = {\n    'url': 'http://api.ejemplo.com/mcp/',\n    'headers': {\n        'Authorization': 'Bearer tu_token_aqui'\n    },\n    'timeout': 45.0\n}\n\n# API Key personalizada\napi_key_server = {\n    'url': 'http://api.ejemplo.com/mcp/',\n    'headers': {\n        'X-API-Key': 'tu_api_key_aqui'\n    }\n}\n\n# Headers m\xfaltiples\ncustom_server = {\n    'url': 'http://api.ejemplo.com/mcp/',\n    'headers': {\n        'Authorization': 'Bearer token123',\n        'X-Client-Version': '1.0.0',\n        'Content-Type': 'application/json'\n    }\n}\n\nclient = DeepSeekClient(\n    model='deepseek-chat',\n    mcp_servers=[bearer_server, api_key_server, custom_server]\n)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuraci\xf3n-avanzada-con-mcpserverconfig",children:"Configuraci\xf3n Avanzada con MCPServerConfig"}),"\n",(0,s.jsx)(n.h3,{id:"usando-la-clase-mcpserverconfig",children:"Usando la Clase MCPServerConfig"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient, MCPServerConfig\n\n# Configuraci\xf3n completa con la clase\nserver_config = MCPServerConfig(\n    name=\"Mi Servidor API\",\n    url='http://localhost:8000/mcp/',\n    headers={\n        'Authorization': 'Bearer token123',\n        'X-Environment': 'production'\n    },\n    timeout=60.0,\n    transport_type='http'\n)\n\nclient = DeepSeekClient(\n    model='deepseek-chat',\n    mcp_servers=[server_config]\n)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"m\xfaltiples-servidores-con-mcpserverconfig",children:"M\xfaltiples Servidores con MCPServerConfig"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Servidor principal\nmain_server = MCPServerConfig(\n    name=\"Servidor Principal\",\n    url='http://localhost:8000/mcp/',\n    headers={'X-Priority': 'main'},\n    timeout=60.0\n)\n\n# Servidor de respaldo\nbackup_server = MCPServerConfig(\n    name=\"Servidor Respaldo\", \n    url='http://localhost:8001/mcp/',\n    headers={'X-Priority': 'backup'},\n    timeout=30.0\n)\n\nclient = DeepSeekClient(\n    model='deepseek-chat',\n    mcp_servers=[main_server, backup_server]\n)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"m\xfaltiples-servidores-http",children:"M\xfaltiples Servidores HTTP"}),"\n",(0,s.jsx)(n.h3,{id:"ejemplo-con-m\xfaltiples-urls",children:"Ejemplo con M\xfaltiples URLs"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Diferentes servidores especializados\nmultiple_servers = [\n    # Servidor de base de datos\n    {\n        'url': 'http://localhost:8000/mcp/',\n        'headers': {'X-Service': 'database'},\n        'timeout': 60.0\n    },\n    # Servidor de an\xe1lisis\n    {\n        'url': 'http://localhost:8001/mcp/',\n        'headers': {'X-Service': 'analytics'}, \n        'timeout': 120.0\n    },\n    # Servidor de b\xfasqueda\n    {\n        'url': 'http://localhost:8002/mcp/',\n        'headers': {'X-Service': 'search'},\n        'timeout': 30.0\n    }\n]\n\nclient = DeepSeekClient(\n    model='deepseek-chat',\n    system_prompt='Tienes acceso a herramientas de base de datos, an\xe1lisis y b\xfasqueda.',\n    mcp_servers=multiple_servers\n)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"ejemplos-pr\xe1cticos",children:"Ejemplos Pr\xe1cticos"}),"\n",(0,s.jsx)(n.h3,{id:"ejemplo-b\xe1sico",children:"Ejemplo B\xe1sico"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nimport asyncio\n\nasync def ejemplo_basico():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=['http://localhost:8000/mcp/']\n    )\n    \n    try:\n        result = await client.execute('Lista las herramientas disponibles')\n        print(f\"Herramientas: {result.tools_used}\")\n        print(f\"Respuesta: {result.output}\")\n    finally:\n        await client.close()\n\nasyncio.run(ejemplo_basico())\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ejemplo-con-headers-y-timeout",children:"Ejemplo con Headers y Timeout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"async def ejemplo_avanzado():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=[{\n            'url': 'http://localhost:8000/mcp/',\n            'headers': {\n                'Authorization': 'Bearer mi-token',\n                'X-Client': 'DeepSeek-MCP'\n            },\n            'timeout': None  # Sin l\xedmite para operaciones largas\n        }]\n    )\n    \n    try:\n        result = await client.execute('Ejecuta un an\xe1lisis complejo de datos')\n        \n        if result.success:\n            print(f\"\u2705 \xc9xito: {result.output}\")\n            print(f\"\ud83d\udd27 Herramientas usadas: {result.tools_used}\")\n            print(f\"\u23f1\ufe0f Tiempo: {result.metadata.get('duration', 0):.2f}s\")\n        else:\n            print(f\"\u274c Error: {result.error}\")\n            \n    finally:\n        await client.close()\n\nasyncio.run(ejemplo_avanzado())\n"})}),"\n",(0,s.jsx)(n.h2,{id:"verificar-configuraci\xf3n",children:"Verificar Configuraci\xf3n"}),"\n",(0,s.jsx)(n.h3,{id:"obtener-informaci\xf3n-del-cliente",children:"Obtener Informaci\xf3n del Cliente"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Verificar configuraci\xf3n despu\xe9s de crear el cliente\nclient = DeepSeekClient(\n    model='deepseek-chat',\n    mcp_servers=['http://localhost:8000/mcp/']\n)\n\n# Obtener estad\xedsticas\nstats = client.get_stats()\nprint(f\"Servidores configurados: {stats['servers_configured']}\")\nprint(f\"Servidores conectados: {stats['servers_connected']}\")\n\n# Obtener herramientas disponibles\ntools = client.get_available_tools()\nprint(f\"Herramientas disponibles: {tools}\")\n\n# Verificar estado de conexi\xf3n\nis_connected = client.is_connected()\nprint(f\"\xbfConectado? {is_connected}\")\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"Consejo",type:"tip",children:(0,s.jsxs)(n.p,{children:["Usa ",(0,s.jsx)(n.code,{children:"timeout=None"})," con precauci\xf3n, solo para operaciones que sabes que pueden tomar mucho tiempo. Para la mayor\xeda de casos, un timeout de 30-60 segundos es apropiado."]})}),"\n",(0,s.jsx)(n.admonition,{title:"Importante",type:"warning",children:(0,s.jsx)(n.p,{children:"Los headers se pasan directamente al transporte HTTP de la librer\xeda. Aseg\xfarate de que el servidor MCP que est\xe1s usando acepta los headers que env\xedas."})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var r=i(6540);const s={},o=r.createContext(s);function t(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);