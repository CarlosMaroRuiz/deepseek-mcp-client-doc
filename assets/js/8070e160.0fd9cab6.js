"use strict";(self.webpackChunkdeepseek_mcp_client_docs=self.webpackChunkdeepseek_mcp_client_docs||[]).push([[3822],{4143:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"quickstart","title":"Gu\xeda R\xe1pida","description":"Uso B\xe1sico (Sin MCP)","source":"@site/docs/quickstart.md","sourceDirName":".","slug":"/quickstart","permalink":"/deepseek-mcp-client/docs/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/CarlosMaroRuiz/deepseek-mcp-client/tree/main/docs/docs/quickstart.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Instalaci\xf3n","permalink":"/deepseek-mcp-client/docs/installation"},"next":{"title":"Configuraci\xf3n de Servidores HTTP","permalink":"/deepseek-mcp-client/docs/configuration/http-servers"}}');var o=t(4848),r=t(8453);const s={},a="Gu\xeda R\xe1pida",l={},c=[{value:"Uso B\xe1sico (Sin MCP)",id:"uso-b\xe1sico-sin-mcp",level:2},{value:"Con Servidor HTTP MCP",id:"con-servidor-http-mcp",level:2},{value:"Con Servidor STDIO",id:"con-servidor-stdio",level:2},{value:"Servidor En Memoria (FastMCP)",id:"servidor-en-memoria-fastmcp",level:2},{value:"Configuraci\xf3n con Logging",id:"configuraci\xf3n-con-logging",level:2},{value:"Manejo de Resultados",id:"manejo-de-resultados",level:2},{value:"Configuraci\xf3n M\xfaltiples Servidores",id:"configuraci\xf3n-m\xfaltiples-servidores",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"gu\xeda-r\xe1pida",children:"Gu\xeda R\xe1pida"})}),"\n",(0,o.jsx)(n.h2,{id:"uso-b\xe1sico-sin-mcp",children:"Uso B\xe1sico (Sin MCP)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nimport asyncio\n\nasync def ejemplo_basico():\n    client = DeepSeekClient(model='deepseek-chat')\n    \n    result = await client.execute('\xbfCu\xe1l es la capital de Francia?')\n    print(result.output)\n    \n    await client.close()\n\nasyncio.run(ejemplo_basico())\n"})}),"\n",(0,o.jsx)(n.h2,{id:"con-servidor-http-mcp",children:"Con Servidor HTTP MCP"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nimport asyncio\n\nasync def ejemplo_http():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=['http://localhost:8000/mcp/']\n    )\n    \n    result = await client.execute('\xbfQu\xe9 herramientas tienes disponibles?')\n    print(result.output)\n    print(f\"Herramientas usadas: {result.tools_used}\")\n    \n    await client.close()\n\nasyncio.run(ejemplo_http())\n"})}),"\n",(0,o.jsx)(n.h2,{id:"con-servidor-stdio",children:"Con Servidor STDIO"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient\nimport asyncio\n\nasync def ejemplo_stdio():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        mcp_servers=[{\n            'command': 'python',\n            'args': ['mi_servidor.py'],\n            'timeout': 60.0\n        }]\n    )\n    \n    result = await client.execute('Ejecuta an\xe1lisis de datos')\n    print(result.output)\n    \n    await client.close()\n\nasyncio.run(ejemplo_stdio())\n"})}),"\n",(0,o.jsx)(n.h2,{id:"servidor-en-memoria-fastmcp",children:"Servidor En Memoria (FastMCP)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from deepseek_mcp_client import DeepSeekClient\nfrom fastmcp import FastMCP\nimport asyncio\n\n# Crear servidor en memoria\ncalculadora = FastMCP("Calculadora")\n\n@calculadora.tool\ndef sumar(a: float, b: float) -> float:\n    """Sumar dos n\xfameros"""\n    return a + b\n\n@calculadora.tool  \ndef multiplicar(a: float, b: float) -> float:\n    """Multiplicar dos n\xfameros"""\n    return a * b\n\nasync def ejemplo_memoria():\n    client = DeepSeekClient(\n        model=\'deepseek-chat\',\n        mcp_servers=[calculadora]\n    )\n    \n    result = await client.execute(\'Calcula 15 + 25 y luego multiplica por 2\')\n    print(result.output)\n    \n    await client.close()\n\nasyncio.run(ejemplo_memoria())\n'})}),"\n",(0,o.jsx)(n.h2,{id:"configuraci\xf3n-con-logging",children:"Configuraci\xf3n con Logging"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient, setup_colored_logging\nimport asyncio\n\n# Habilitar logging con colores\nsetup_colored_logging(\"INFO\")\n\nasync def ejemplo_logging():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        enable_logging=True,\n        enable_progress=True,\n        mcp_servers=['http://localhost:8000/mcp/']\n    )\n    \n    result = await client.execute('Analiza datos con logging detallado')\n    print(result.output)\n    \n    await client.close()\n\nasyncio.run(ejemplo_logging())\n"})}),"\n",(0,o.jsx)(n.h2,{id:"manejo-de-resultados",children:"Manejo de Resultados"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'async def ejemplo_resultados():\n    client = DeepSeekClient(model=\'deepseek-chat\')\n    result = await client.execute(\'Tu consulta aqu\xed\')\n    \n    # Verificar \xe9xito\n    if result.success:\n        print(f"\u2705 Respuesta: {result.output}")\n        print(f"\ud83d\udd27 Herramientas: {result.tools_used}")\n        print(f"\u23f1\ufe0f Duraci\xf3n: {result.metadata.get(\'duration\', 0):.2f}s")\n        print(f"\ud83c\udd94 ID: {result.execution_id}")\n    else:\n        print(f"\u274c Error: {result.error}")\n    \n    # Convertir a diccionario\n    data = result.to_dict()\n    \n    await client.close()\n'})}),"\n",(0,o.jsx)(n.h2,{id:"configuraci\xf3n-m\xfaltiples-servidores",children:"Configuraci\xf3n M\xfaltiples Servidores"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from deepseek_mcp_client import DeepSeekClient, MCPServerConfig\n\nasync def ejemplo_multiple():\n    client = DeepSeekClient(\n        model='deepseek-chat',\n        system_prompt='Eres un asistente con m\xfaltiples herramientas.',\n        mcp_servers=[\n            # HTTP\n            'http://localhost:8000/mcp/',\n            \n            # STDIO con configuraci\xf3n\n            {\n                'command': 'node',\n                'args': ['servidor.js'],\n                'env': {'NODE_ENV': 'production'}\n            },\n            \n            # Configuraci\xf3n avanzada\n            MCPServerConfig(\n                url='http://localhost:8001/mcp/',\n                headers={'Authorization': 'Bearer token'},\n                timeout=45.0\n            )\n        ]\n    )\n    \n    result = await client.execute('Usa todas las herramientas disponibles')\n    print(result.output)\n    \n    await client.close()\n\nasyncio.run(ejemplo_multiple())\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);